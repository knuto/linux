checker checkpatch
addflags  --quiet --show-types --strict --emacs
line_len 110

checker sparse
addflags -D__linux__ -Dlinux -D__STDC__ -Dunix -D__unix__ -Wsparse-all
cflags

#	Name		Regular expression for matching in checker output
typedef DECL		symbol '.*' was not declared. Should it be static\?
typedef SHADOW		symbol '\w+' shadows an earlier one\n.*originally declared here
typedef TYPESIGN	incorrect type in argument \d+ \(different signedness\)\n.*expected\n.*got
typedef RETURN_VOID	returning void-valued expression
typedef SIZEOF_BOOL	expression using sizeof bool
typedef CONTEXT		context imbalance in '.*'
typedef MEMCPY_MAX_COUNT \w+ with byte count of
typedef CAST_TO_AS	cast adds address space to expression
typedef ADDRESS_SPACE	incorrect type in .* \(different address spaces\)\n.*expected\n.*got
typedef PTR_INHERIT	incorrect type in .* \(different base types\)\n.*expected\n.*got
typedef PTR_SUBTRACTION_BLOWS potentially expensive pointer subtraction
typedef VLA		Variable length array is used
typedef OVERFLOW	constant [x\dA-Fa-f]+ is so big it is \w+
typedef TAUTOLOGICAL_COMPARE self-comparison always evaluates to (true|false)
typedef NON_POINTER_NULL Using plain integer as NULL pointer
typedef BOOL_CAST_RESTRICTED restricted \w+ degrades to integer
typedef TYPESIGN	incorrect type in .* \(different signedness\)\n.*expected\n.*got
typedef FUNCTION_REDECL symbol '.*' redeclared with different type \(originally declared at
typedef COND_ADDRESS_ARRAY the address of an array will always evaluate as true
typedef BITWISE 	cast (to|from) restricted
typedef ENUM_MISMATCH	mixing different enum types\n.*versus\n.*

# Type names invented here - not maskable from sparse?
typedef NO_DEREF	dereference of noderef expression
typedef ARG_TYPE_MOD	incorrect type in .* \(different modifiers\)\n.*expected\n.*got
typedef ARG_TYPE_COMP	incorrect type in .* \(incompatible .*\(.*\)\)\n.*expected\n.*got
typedef ARG_AS_COMP	incompatible types in comparison expression \(different address spaces\)
typedef CMP_TYPE	incompatible types in comparison expression \(different base types\)
typedef CAST_TRUNC	cast truncates bits from constant value
typedef CAST_FROM_AS	cast removes address space of expression
typedef EXT_LINK_DEF	function '\w+' with external linkage has definition
typedef FUNC_ARITH	arithmetics on pointers to functions
typedef CALL_NO_TYPE	call with no type!
typedef FUNC_SUB	subtraction of functions\? Share your drugs
typedef STRING_CONCAT	trying to concatenate \d+-character string \(\d+ bytes max\)
typedef INARG_DIRECTIVE directive in argument list
typedef NONSCALAR_CAST  cast (to|from) non-scalar
typedef EOF_NL		no newline at end of file
typedef BAD_INT		bad integer constant expression
typedef SIZE_EXPR	cannot size expression
typedef ASSIGN_INVAL	invalid assignment: .*\n.*left side has type .*\n.*right side has type .*
typedef DUBIOUS_EXPR	dubious: .*
typedef DO_WHILE_NOCOMP	do-while statement is not a compound statement
typedef INIT_OVERFLOW	too long initializer-string for array of char\(no space for nul char\)
typedef INIT_TWICE	Initializer entry defined twice\n.*also defined here
typedef REDEF_TOK	preprocessor token \w+ redefined\n.*this was the original definition
typedef ATTR_UNKNOWN	attribute '.*': unknown attribute

# This one is likely hiding a lot of issues - threshold should be configurable instead:
typedef TOO_MANY	too many warnings

# cpp error directives triggered:
typedef SPARSE_OFF	"Sparse checking disabled for this file"

# smatch uses the sparse parser so there's some overlap in reporting
# (using the same type names for these cases)
# No types are directly maskable in smatch
#
checker smatch
cflags
typedef VLA		Variable length array is used
typedef EXPR_DEREF 	we should not have an EXPR_DEREF left at expansion time
typedef OVERFLOW	constant [x\dA-Fa-f]+ is so big it is \w+
typedef ASM_LVALUE	asm output is not an lvalue
typedef NVFA		strange non-value function or array
typedef EXT_LINK_DEF	function '\w+' with external linkage has definition
typedef CAST_FROM_AS	cast removes address space of expression
typedef STRING_CONCAT	trying to concatenate \d+-character string \(\d+ bytes max\)
typedef NO_DEREF	cannot dereference this type
typedef INARG_DIRECTIVE directive in argument list
typedef BITWISE 	cast (to|from) restricted
typedef NOT_LVALUE	not an lvalue
typedef DECL_END_SEMI	expected ; at end of declaration
typedef DECL_END	Expected . at .*end of .*\n.*got
typedef BAD_INT		bad integer constant expression
typedef UNDEF_ID	undefined identifier '.*'
typedef REDEF_TOK	preprocessor token \w+ redefined\n.*this was the original definition
typedef EOF_NL		no newline at end of file
typedef IF_INDENT	(if|for|while) statement not indented
typedef SIGNED_OVERFLOW signed overflow undefined
typedef PREV_ASSUME	we previously assumed '.*' could be null \(see line \d+\)
typedef COND_IMPOSSIBLE impossible condition
typedef DEREF_CHECK	variable dereferenced before check
typedef UNINIT_SYM	uninitialized symbol
typedef BUF_OVERFLOW	buffer overflow
typedef INCONS_INDENT	inconsistent indenting
typedef UNUSED_LOOP	we never enter this loop
typedef MISSING_BREAK	missing break\? reassigning
typedef BITWISE_AND	bitwise AND condition is false here
typedef BIT_TYPE	should '.*' be a 64 bit type\?
typedef SIZEOF_NUM	sizeof\(NUMBER\)\?
typedef POT_DEREF	potentially dereferencing uninitialized '.*'
typedef UNREACHABLE	ignoring unreachable code
typedef MEMLEAK		possible memory leak of '.*'
typedef INVALID_DIV	.*: invalid divide \w+
typedef TEST_AFTER_USE	testing array offset '.*' after use
typedef NO_EFFECT	statement has no effect
typedef IS_BITWISE	should this be a bitwise op\?
typedef SUBTR_MAX	potential negative subtraction from max '.*'
typedef HAIRY_FUNC	.*Function too hairy
typedef UNSIGNED_LTNUL	unsigned '.*' is never less than zero\.
typedef NEG_UNSIGNED	assigning .* to unsigned variable '.*'
typedef NEG_RET_UNSIGN	signedness bug returning '.*'
typedef TAUTOLOGY	always true condition '.*'
typedef ARRAY_NONULL	this array is probably non-NULL\. '.*'
typedef WRONG_AND	maybe use && instead of &
typedef SHIFT_OVERFLOW	right shifting more than type allows \d+ vs \d+
typedef SNPRINTF_CHOP	snprintf\(\) chops off the last chars of '.*': \d+ vs \d+
typedef STRCPY_CHOP	strcpy\(\) '.*' too large for '.*' \(\d+ vs \d+\)
typedef OVERFLOW_ASSIGN '.*' \d+ can.t fit into \d+ '.*'
typedef DIV_BY_NULL	debug: .*: divide by zero
typedef SHIFT_PRESED	shift has higher precedence than mask
typedef TOKEN_EXAND	too long token expansion
typedef ERROR_PARSING	internal error parsing.*\n.*true_rl =.*false_rl =.*intersection =.*
typedef AS_CAST		cast between address spaces
typedef ARG_AS_COMP	incompatible types in comparison expression \(different address spaces\)
typedef OVERWR_LEAK	overwrite may leak '.*'
typedef PTR_INHERIT	incorrect type in .* \(different base types\)\n.*expected\n.*got
typedef DUMMY_IF	if\(\);
typedef SUSPECT_BITOP	suspicious bitop condition
typedef WRONG_ANDOR	was .. intended here instead of ..\?
typedef BITFIELD_TYPE	invalid bitfield specifier for type restricted
typedef WRONG_EQ	was '== 0' instead of '='
typedef EMPTY_SWITCH	switch with no cases
typedef ALLOC		not allocating enough data \d+ vs \d+
typedef SHIFT_ZERO	mask and shift to zero
typedef FUNC_DECL	Expected \) in function declarator\n.*got .*
typedef RESERVED_ID	Trying to use reserved word '.*' as identifier
typedef HEADER_MISS	unable to open '.*'\n.*using '.*'
typedef EXPR_PAREN	Expected . in expression\n.*got .*
typedef MACRO_PAREN	the '.*' macro might need parens
typedef DO_WHILE_CONT	continue to end of do { \.\.\. } while\(0\); loop
typedef CAST_MEM	potential memory corrupting cast \d+ vs \d+ bytes

# This one is likely hiding a lot of issues - threshold should be configurable instead:
typedef TOO_MANY	too many (errors|warnings)

# cpp error directives triggered:
typedef SPARSE_OFF	"Sparse checking disabled for this file"
typedef ERROR_DIRECT	".*"

checker checkdoc
typedef PARAM_DESC	No description found for parameter
typedef X_PARAM    	Excess function parameter
typedef X_STRUCT	Excess struct member
typedef FUN_PROTO    	cannot understand function prototype
typedef DOC_FORMAT   	Incorrect use of kernel-doc format
typedef BAD_LINE	bad line
typedef AMBIGUOUS	Cannot understand.*\n on line
typedef BOGUS_STRUCT	Cannot parse struct or union
typedef DUPL_SEC	duplicate section name

checker coccicheck
cflags

run sparse checkpatch checkdoc smatch
#run all
